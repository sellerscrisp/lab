version: '3.8'

networks:
  proxy:
    external: true

volumes:
  traefik_letsencrypt: {}

configs:
  ref_authentik_middlewares_config:
    external: true
    name: traefik_middlewares_authentik.yaml
  shepherd-docker-config:
    external: true

services:
  traefik:
    image: traefik:latest
    command:
      - "--providers.swarm=true"
      - "--providers.swarm.network=proxy"
      - "--providers.swarm.exposedByDefault=false"
      - "--serversTransport.insecureSkipVerify=true" #! bad
      - "--providers.file.watch=true"
      - "--providers.file.directory=/rules"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.cloudflare.acme.dnschallenge=true"
      - "--certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.cloudflare.acme.email=${CF_DNS_EMAIL}"
      - "--certificatesresolvers.cloudflare.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.websecure.http.tls.certResolver=cloudflare"
      - "--entrypoints.websecure.http.tls.domains[0].main=${DOMAIN1}"
      - "--entrypoints.websecure.http.tls.domains[0].sans=*.${DOMAIN1}"
      - "--entrypoints.websecure.http.tls.domains[1].main=${DOMAIN2}"
      - "--entrypoints.websecure.http.tls.domains[1].sans=*.${DOMAIN2}"
      - "--entrypoints.websecure.http.tls.domains[2].main=${DOMAIN3}"
      - "--entrypoints.websecure.http.tls.domains[2].sans=*.${DOMAIN3}"
      - "--api.dashboard=false"
      - "--log.level=INFO"
    environment:
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: ingress
      - target: 443
        published: 443
        protocol: tcp
        mode: ingress
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_letsencrypt:/letsencrypt
    configs:
      - source: ref_authentik_middlewares_config
        target: /rules/authentik-middlewares-file.yaml
        mode: 0444
    networks:
      - proxy
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.services.ops-traefik.loadbalancer.server.port=80"
        - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
        - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.caulk.lol`)"
        - "traefik.http.routers.traefik-dashboard.tls=true"
        - "traefik.http.routers.traefik-dashboard.tls.certresolver=cloudflare"
        - "traefik.http.routers.traefik-dashboard.service=api@internal"
        - "traefik.http.routers.traefik-dashboard.middlewares=myauth@docker" #? basic auth for dashboard
  whoami:
    image: "traefik/whoami"
    networks:
      - proxy
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.whoami-caulklol.rule=Host(`whoami.caulk.lol`)"
        - "traefik.http.routers.whoami-caulklol.entrypoints=websecure"
        - "traefik.http.routers.whoami-caulklol.tls=true"
        - "traefik.http.routers.whoami-caulklol.tls.certresolver=cloudflare"
        - "traefik.http.routers.whoami-caulklol.service=whoami-caulklol-svc"
        - "traefik.http.routers.whoami-caulklol.middlewares=middlewares-authentik@file"
        - "traefik.http.services.whoami-caulklol-svc.loadbalancer.server.port=80"

  # not functional yet
  shepherd:
    image: containrrr/shepherd:latest
    environment:
      SLEEP_TIME: "5m"
      ROLLBACK_ON_FAILURE: "true"
      WITH_REGISTRY_AUTH: "true"
      FILTER_SERVICES: "label=com.crispsh.autodeploy"
      TZ: "America/New_York"
    configs:
      - source: shepherd-docker-config
        target: /config.json
        mode: 0444
    networks:
      - proxy
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure